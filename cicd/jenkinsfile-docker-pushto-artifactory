pipeline {
  agent any
  options {
    disableConcurrentBuilds()
    disableResume()
    buildDiscarder(logRotator(numToKeepStr: '10'))
    timeout(time: 1, unit: 'HOURS')
  }
  tools {
    maven 'maven-3.6.3' 
  }
  environment {
    DATE = new Date().format('yy.M')
    TAG = "${DATE}.${BUILD_NUMBER}"
  }
  stages {
    stage ('Build') {
      steps {
        sh 'mvn clean package'
      }
    }
    stage('Docker Build') {
      steps {
        script {
          docker.build("ubuntu-docker-local/hello-world:${TAG}")
        }
      }
    }
    stage('Pushing Docker Image to Jfrog Artifactory') {
      steps {
        script {
          docker.withRegistry('https://srinilab.jfrog.io', 'artifactory-credential') {
            docker.image("ubuntu-docker-local/hello-world:${TAG}").push()
            docker.image("ubuntu-docker-local/hello-world:${TAG}").push("latest")
          }
        }
      }
    }
    stage('Deploy'){
      steps {
	withCredentials([sshUserPrivateKey(credentialsId: 'vm-key', keyFileVariable: 'SSH_PRIVATE_KEY_PATH')]) {
        sh '''ssh -i $SSH_PRIVATE_KEY_PATH -o StrictHostKeyChecking=no azureuser@4.240.36.178 <<ENDSSH
        sh "docker stop hello-world | true"
        sh "docker rm hello-world | true"
        sh "docker run --name hello-world -d -p 80:8080 ubuntu-docker-local/hello-world:${TAG}"
 	ENDSSH
	'''
}
      }
    }
  }
}
