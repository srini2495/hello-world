name: Build and deploy to Ec2 using AWS code deploy

# on:
#   push:
#     branches:
#       - dev
#       - staging
#       - master

on: workflow_dispatch

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.6.0
      
      - name: Maven Build
        run: |
          mvn --version
          mvn clean package
      - name: Build the Docker image
        run: docker build --tag vigneshsweekaran/hello-world-github-actions:$GITHUB_RUN_NUMBER .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image
        run: docker push vigneshsweekaran/hello-world-github-actions:$GITHUB_RUN_NUMBER
        
      - name: Deploying to Dev environment
        uses: appleboy/ssh-action@master
        if: ${{ github.ref == 'refs/heads/dev' }}
        env:
          TAG: ${{ github.run_number }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: TAG
          script: |
            docker rm -f hello-world-dev || true
            docker run --name hello-world-dev -d -p 9003:8080 vigneshsweekaran/hello-world-github-actions:$TAG
            
  continuous-deployment:
      runs-on: ubuntu-latest
      needs: [continuous-integration]
      if: github.ref == 'refs/heads/main'
      steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-southeast-1

        - name: Create CodeDeploy Deployment
          id: deploy
          run: |
            # Assuming the Deployment Group is already setup
            aws deploy create-deployment \
              --application-name application-name \
              --deployment-group-name AppDeploymentGroupName \
              --deployment-config-name CodeDeployDefault.OneAtATime \
              --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
